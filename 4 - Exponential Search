#include <iostream>
using namespace std;

int binarySearch(int arr[], int left, int right, int target) {
    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == target) {
            return mid;
        } else if (arr[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1;
}

int exponentialSearch(int arr[], int n, int target) {
    // Verifica se o primeiro elemento é o alvo
    if (arr[0] == target) {
        return 0;
    }

    int index = 1;
    while (index < n && arr[index] <= target) {
        index *= 2;
    }

    return binarySearch(arr, index / 2, min(index, n - 1), target);
}

int main() {
    int arr[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25};
    int n = sizeof(arr) / sizeof(arr[0]);
    int target = 15;

    int result = exponentialSearch(arr, n, target);
    if (result != -1) {
        cout << "Elemento " << target << " encontrado no índice " << result << endl;
    } else {
        cout << "Elemento " << target << " não encontrado" << endl;
    }

    return 0;
}
